{"ast":null,"code":"var _jsxFileName = \"/Users/natabon/Documents/GitHub/Todolist/src/Todolist.tsx\";\nimport React, { useState } from 'react';\nexport const Todolist = props => {\n  const [newTitle, setNewTitle] = useState('');\n  console.log(newTitle);\n\n  const addTaskHandler = () => {\n    props.addTask(newTitle);\n    setNewTitle('');\n  };\n\n  const onChangeHandler = event => {\n    setNewTitle(event.currentTarget.value);\n  };\n\n  const onKeyPressHandler = event => {\n    if (event.key === \"Enter\") {\n      addTaskHandler();\n    }\n  };\n\n  const tsarChangeFilter;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newTitle,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, props.tasks.map(t => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: t.isDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      props.removeTasks(t.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, \"X\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: allChangeFilterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: activeChangeFilterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: completedChangeFilterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Completed\")));\n};","map":{"version":3,"sources":["/Users/natabon/Documents/GitHub/Todolist/src/Todolist.tsx"],"names":["React","useState","Todolist","props","newTitle","setNewTitle","console","log","addTaskHandler","addTask","onChangeHandler","event","currentTarget","value","onKeyPressHandler","key","tsarChangeFilter","title","tasks","map","t","isDone","removeTasks","id","allChangeFilterHandler","activeChangeFilterHandler","completedChangeFilterHandler"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA0D,OAA1D;AAiBA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAqB;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAGA,QAAMI,cAAc,GAAC,MAAI;AACrBL,IAAAA,KAAK,CAACM,OAAN,CAAcL,QAAd;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAHD;;AAKA,QAAMK,eAAe,GAAEC,KAAD,IAAuC;AACzDN,IAAAA,WAAW,CAACM,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAX;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAEH,KAAD,IAAyC;AAC7D,QAAGA,KAAK,CAACI,GAAN,KAAY,OAAf,EAAuB;AACnBP,MAAAA,cAAc;AACjB;AACJ,GAJD;;AAMA,QAAMQ,gBAAN;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,KAAK,CAACc,KAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEb,QAAd;AAAwB,IAAA,QAAQ,EAAEM,eAAlC;AAAmD,IAAA,UAAU,EAAEI,iBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,OAAO,EAAEN,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CAFJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQL,KAAK,CAACe,KAAN,CAAYC,GAAZ,CAAiBC,CAAC,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAEA,CAAC,CAACC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,eACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,CAAC,CAACH,KAAT,CADc,eAEd;AAAQ,IAAA,OAAO,EAAG,MAAM;AAAEd,MAAAA,KAAK,CAACmB,WAAN,CAAkBF,CAAC,CAACG,EAApB;AAAwB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFc,CAAtB,CAFR,CANJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAQ,IAAA,OAAO,EAAEC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,IAAA,OAAO,EAAEC,4BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CAfJ,CADJ;AAuBH,CA9CM","sourcesContent":["import React, {ChangeEvent, useState, KeyboardEvent} from 'react';\nimport {FilterValueType} from \"./App\";\n\ntype propsType = {\n    title: string;\n    tasks: Array<tasksType>\n    removeTasks: (id: string) => void\n    changeFilter: (value: FilterValueType) => void\n    addTask:(newTitle:string)=>void\n}\n\nexport type tasksType = {\n    id: string\n    title: string\n    isDone: boolean\n}\n\nexport const Todolist = (props:propsType) => {\n    const [newTitle, setNewTitle] = useState('')\n    console.log(newTitle)\n\n\n    const addTaskHandler=()=>{\n        props.addTask(newTitle)\n        setNewTitle('')\n    }\n\n    const onChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n        setNewTitle(event.currentTarget.value)\n    }\n\n    const onKeyPressHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n        if(event.key===\"Enter\"){\n            addTaskHandler()\n        }\n    }\n\n    const tsarChangeFilter\n\n\n    return (\n        <div>\n            <h3>{props.title}</h3>\n            <div>\n                <input value={newTitle} onChange={onChangeHandler} onKeyPress={onKeyPressHandler}/>\n                <button onClick={addTaskHandler}>+</button>\n            </div>\n            <ul>\n                {\n                    props.tasks.map( t => <li><input type=\"checkbox\" checked={t.isDone}/>\n                            <span>{t.title}</span>\n                            <button onClick={ () => { props.removeTasks(t.id)} }>X</button>\n                        </li>\n                    )\n                }\n            </ul>\n            <div>\n                <button onClick={allChangeFilterHandler}>All</button>\n                <button onClick={activeChangeFilterHandler}>Active</button>\n                <button onClick={completedChangeFilterHandler}>Completed</button>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}