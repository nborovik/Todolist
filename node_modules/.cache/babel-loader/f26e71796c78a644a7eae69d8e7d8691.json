{"ast":null,"code":"var _jsxFileName = \"/Users/natabon/Documents/GitHub/Todolist/src/Todolist.tsx\";\nimport React, { useState } from 'react';\nimport { Button } from \"./Components/Button\";\nexport const Todolist = props => {\n  const [newTitle, setNewTitle] = useState('');\n  console.log(newTitle);\n\n  const addTaskHandler = () => {\n    props.addTask(newTitle);\n    setNewTitle('');\n  };\n\n  const onChangeHandler = event => {\n    setNewTitle(event.currentTarget.value);\n  };\n\n  const onKeyPressHandler = event => {\n    if (event.key === \"Enter\") {\n      addTaskHandler();\n    }\n  };\n\n  const tsarChangeFilterHandler = value => {\n    props.changeFilter(value);\n  };\n\n  const removeTaskHandler = tID => {\n    props.removeTasks(tID);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newTitle,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, props.tasks.map(t => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => removeTaskHandler(t.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, \"X\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => tsarChangeFilterHandler(\"all\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => tsarChangeFilterHandler(\"active\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => tsarChangeFilterHandler(\"completed\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Completed\"), /*#__PURE__*/React.createElement(Button, {\n    name: 'all',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: 'active',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: 'comleted',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/natabon/Documents/GitHub/Todolist/src/Todolist.tsx"],"names":["React","useState","Button","Todolist","props","newTitle","setNewTitle","console","log","addTaskHandler","addTask","onChangeHandler","event","currentTarget","value","onKeyPressHandler","key","tsarChangeFilterHandler","changeFilter","removeTaskHandler","tID","removeTasks","title","tasks","map","t","id","isDone"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, useState, KeyboardEvent} from 'react';\nimport {FilterValueType} from \"./App\";\nimport {Button} from \"./Components/Button\";\n\ntype propsType = {\n    title: string;\n    tasks: Array<tasksType>\n    removeTasks: (id: string) => void\n    changeFilter: (value: FilterValueType) => void\n    addTask:(newTitle:string)=>void\n}\n\nexport type tasksType = {\n    id: string\n    title: string\n    isDone: boolean\n}\n\nexport const Todolist = (props:propsType) => {\n    const [newTitle, setNewTitle] = useState('')\n    console.log(newTitle)\n\n\n    const addTaskHandler=()=>{\n        props.addTask(newTitle)\n        setNewTitle('')\n    }\n\n    const onChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n        setNewTitle(event.currentTarget.value)\n    }\n\n    const onKeyPressHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n        if(event.key===\"Enter\"){\n            addTaskHandler()\n        }\n    }\n\n    const tsarChangeFilterHandler = (value: FilterValueType) => {\n        props.changeFilter(value)\n    }\n\n    const removeTaskHandler=(tID:string)=> {\n        props.removeTasks(tID)\n    }\n\n    return (\n        <div>\n            <h3>{props.title}</h3>\n            <div>\n                <input value={newTitle} onChange={onChangeHandler} onKeyPress={onKeyPressHandler}/>\n                <button onClick={addTaskHandler}>+</button>\n            </div>\n            <ul>\n                {\n                    props.tasks.map( t => {\n\n                        return(\n                            <li key={t.id}>\n                                <input type=\"checkbox\" checked={t.isDone}/>\n                                <span>{t.title}</span>\n                                <button onClick={()=>removeTaskHandler(t.id)}>X</button>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n            <div>\n                <button onClick={()=>tsarChangeFilterHandler(\"all\")}>All</button>\n                <button onClick={()=>tsarChangeFilterHandler(\"active\")}>Active</button>\n                <button onClick={()=>tsarChangeFilterHandler(\"completed\")}>Completed</button>\n                <Button name={'all'} />\n                <Button name={'active'} />\n                <Button name={'comleted'} />\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}